"""Урок 1"""
# ДЗ сдаем ссылкой на GitHub,можно также высылать фото решений из тетрадей,
# можно в Word'е


from math import factorial


def combinations(n, k):
    return int(factorial(n) / (factorial(k) * factorial(n - k)))


# 1. Из колоды в 52 карты извлекаются случайным образом 4 карты.
# a) Найти вероятность того, что все карты – крести.
# Решение:
# количество карт с мастью крести 52 / 4 = 13
# Вероятность того, что первая карта будет крести 13/52 = 1/4
# Вероятность того, что вторая карта будет крести 12/51 = 4/17
# Вероятность того, что третья карта будет крести 11/50
# Вероятность того, что четвертая карта будет крести 10/49
# Вероятность появления четырех крестей:
four_cross = (1 / 4) * (4 / 17) * (11 / 50) * (10 / 49)
print(f'Ответ 1а: {four_cross} или {four_cross:.2%}')
# Ответ 1а: 0.0026410564225690276 или 0.26%

# б) Найти вероятность, что среди 4-х карт окажется хотя бы один туз.
# Решение:
# Вероятность того, что первая карта будет туз 4/52 = 1/13
# Вероятность того, что вторая карта будет туз 4/51 (если не было туза) и 3/51,
# если был туз и т.д... - сложный путь, пойдем от противоположного:
# Пусть Т - событие в котором среди 4-х карт окажется хотя бы один туз,
# тогда Т" - противоположное событие: среди 4-х карт нет ни одного туза,
# всего карт без тузов 52-4 = 48, из них 4 карты можно выбрать M способами:
M = combinations(48, 4)
# из всех 52 карт 4 карты можно выбрать N способами:
N = combinations(52, 4)
# Вероятность появления туза:
one_aces = 1 - M / N
print(f'Ответ 1б: {one_aces} или {one_aces:.2%}')
# Ответ 1б: 0.2812632745405854 или 28.13%

# 2. На входной двери подъезда установлен кодовый замок, содержащий десять
# кнопок с цифрами от 0 до 9. Код содержит три цифры, которые нужно нажать
# одновременно. Какова вероятность того, что человек, не знающий код,
# откроет дверь с первой попытки?
# Решение:
# Используем формулу комбинаторики для сочетания:
# количество комбинаций равно N, благоприятный исход - M
k, n, M = 3, 10, 1
N = combinations(n, k)
W = M / N
print(f'Ответ 2: {W} или {W:.2%}')
# Ответ 2: 0.008333333333333333 или 0.83%

# 3. В ящике имеется 15 деталей, из которых 9 окрашены.
# Рабочий случайным образом извлекает 3 детали.
# Какова вероятность того, что все извлеченные детали окрашены?
# Решение:
# Вероятность того, что первая деталь будет окрашена 9/15=3/5
# Вероятность того, что вторая деталь будут окрашена 8/14=4/7
# Вероятность того, что третья деталь будут окрашена 7/13
# Вероятность того, что три детали будут окрашены:
three_details = (3 / 5) * (4 / 7) * (7 / 13)
print(f'Ответ 3: {three_details} или {three_details:.2%}')
# Ответ 3: 0.1846153846153846 или 18.46%

# 4. В лотерее 100 билетов. Из них 2 выигрышных. Какова вероятность того,
# что 2 приобретенных билета окажутся выигрышными?
# Решение:
# Вероятность того что первый выбранный билет - выигрышный: 2/100
# Теперь осталось 99 билетов среди которых 1 выигрышный: 1/99
# Вероятность что эти два события произойдут одновременно:
two_tickets = (2 / 100) * (1 / 99)
print(f'Ответ 4: {two_tickets} или {two_tickets:.2%}')
# Ответ 4: 0.00020202020202020205 или 0.02%
